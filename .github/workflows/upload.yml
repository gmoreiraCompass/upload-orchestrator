name: Upload Archives
on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
jobs:
  upload:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: ${{ github.event_name == 'pull_request' && 2 || 0 }}

      - name: Has changed files
        id: changed-files
        run: |
          if ${{ github.event_name == 'pull_request' }}; then
              echo "changed_files=$(git diff --name-only -r HEAD^1 HEAD | xargs | grep -vE '\.(yml|md)$')" >> $GITHUB_OUTPUT
          else
              echo "changed_files=$(git diff --name-only ${{ github.event.before }} ${{ github.event.after }} | xargs | grep -vE '\.(yml|md)$')" >> $GITHUB_OUTPUT
          fi

      - name: Set Up Git
        run: |
          git config --global user.name 'github-actions[bot]'
          git config --global user.email 'github-actions[bot]@users.noreply.github.com'

      - name: Check for Changes
        run: |
          if git diff HEAD^1 HEAD --quiet; then
            echo "No changes detected"
            exit 0
          else
            echo "Changes detected"
          fi

      - name: Configure AWS Credentials
        if: success() && steps.check-for-changes.outputs.has_changes == 'true'
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY }}
          aws-secret-access-key: ${{ secrets.AWS_ACCESS_SECRET }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Uploading from /home folder
        if: success() && steps.check-for-changes.outputs.has_changes == 'true'
        run: aws s3 sync ./src/portais s3://${{ secrets.AWS_BUCKET_NAME }}/portais --size-only

      - name: Invalidate cache
        # if: success() && steps.check-for-changes.outputs.has_changes == 'true'
        run: |
          echo ${{steps.changed_files.outputs.changed_files}}
          for file in ${{ steps.changed-files.outputs.changed_files }}; do
            aws cloudfront create-invalidation --distribution-id ${{ secrets.AWS_DISTRIBUITION_ID_CLOUDFRONT }} --paths ./${{ secrets.AWS_BUCKET_NAME }}/$file
            echo $file was invalidate
          done
